{"version":3,"sources":["components/contactForm/ContactForm.jsx","components/contactList/ContactList.jsx","components/filter/Filter.jsx","utils/localStorage.helpers.js","App.js","index.js"],"names":["ContactForm","state","name","number","onSubmit","e","preventDefault","contact","props","createContact","setState","onInputChange","target","value","this","type","pattern","title","required","onChange","Component","ContactList","contacts","handleDelete","map","id","onClick","Filter","handleChange","filter","CONTACTS_KEY","saveContacts","localStorage","setItem","JSON","stringify","App","setContacts","uuidv4","find","toLowerCase","alert","onFilterChange","deleteContact","split","getItem","parse","err","console","error","readContacts","filteredContacts","includes","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d6a3c17a.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  }\r\n\r\n  onSubmit = (e) => {\r\n      e.preventDefault()\r\n    \r\n    const contact = {\r\n      name: this.state.name,\r\n      number: this.state.number,\r\n    }\r\n    this.props.createContact(contact);\r\n    this.setState({\r\n      name: '',\r\n      number: ''\r\n    })\r\n  }\r\n\r\n  onInputChange = ({ target }) => {\r\n    this.setState({\r\n      [target.name]: target.value\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.onSubmit}>\r\n        <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={this.state.name}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            onChange={this.onInputChange}\r\n        />\r\n        <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={this.state.number}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            onChange={this.onInputChange}\r\n        />\r\n        <button type='submit'>Add contact</button>\r\n    </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;","import React from 'react';\r\n\r\n\r\n\r\nconst ContactList = ({ contacts, handleDelete }) => (\r\n    <ul>\r\n        {contacts.map(({ id, name, number }) => (\r\n            <li key={id}>\r\n                {name}: {number}\r\n                <button type='button' onClick={handleDelete} id={`deletebtn:${id}`}>Delete</button>\r\n            </li>\r\n        ))}\r\n    </ul>\r\n)\r\n\r\n\r\nexport default ContactList;","import React from 'react';\r\n\r\nconst Filter = ({ handleChange, filter }) => (\r\n    <>\r\n        <p>Find cotatcs by name</p>\r\n        <input type='text' onChange={handleChange} value={filter} />\r\n    </>\r\n)\r\n\r\nexport default Filter;","const CONTACTS_KEY = 'contacts';\r\n\r\nexport const saveContacts = (contacts) => {\r\n    localStorage.setItem(CONTACTS_KEY, JSON.stringify(contacts));\r\n}\r\n\r\nexport const readContacts = () => {\r\n  try {\r\n    const contacts = localStorage.getItem(CONTACTS_KEY);\r\n\r\n    return contacts === null ? [] : JSON.parse(contacts);\r\n  } catch (err) {\r\n    console.error('Get state error: ', err);\r\n  }\r\n};","import React, { Component } from 'react'\nimport { v4 as uuidv4 } from 'uuid'\n\nimport ContactForm from './components/contactForm/ContactForm'\nimport ContactList from './components/contactList/ContactList'\nimport Filter from './components/filter/Filter'\n\nimport { saveContacts, readContacts } from './utils/localStorage.helpers'\n\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: ''\n  }\n\n  setContacts = (contacts) => {\n    this.setState({\n      contacts\n    });\n    saveContacts(contacts)\n  }\n\n  createContact = ({ name, number }) => {\n    const contact = {\n      id: uuidv4(),\n      name,\n      number\n    }\n\n    const foundContact = this.state.contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n    \n    if (foundContact) {\n      alert(`${name} is already in contacts`);\n      return\n    }\n    \n    this.setContacts([\n      ...this.state.contacts,\n      contact\n    ]);\n  }\n\n  onFilterChange = ({ target }) => {\n    this.setState({\n      filter: target.value\n    });\n  }\n\n  deleteContact = ({ target }) => {\n    const id = target.id.split(':')[1];\n\n    this.setContacts(\n      this.state.contacts.filter(\n        contact => contact.id !== id\n      ),\n    );\n  }\n\n  \n\n  componentDidMount() {\n    const contacts = readContacts();\n\n    this.setState({\n      contacts\n    })\n  }\n\n  render() {\n    const filteredContacts = this.state.contacts.filter(\n      contact => contact.name.toLowerCase().includes(this.state.filter.toLowerCase())\n    );\n\n    return (\n      <div className=\"wrapper\">\n        <h2 className=\"lessonHeader\">Phonebook</h2>\n        <ContactForm\n          createContact={this.createContact}\n        />\n        <h2 className=\"lessonHeader\">Contacts</h2>\n        <Filter handleChange={this.onFilterChange} filter={this.state.filter}/>\n        <ContactList contacts={filteredContacts} handleDelete={ this.deleteContact }/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}